name: Poll a multi-device job
inputs:
  job-id:
    description:
    required: true
outputs:
  jobs:
    description:
    value: ${{ steps.data.outputs.jobs }}
runs:
  using: composite
  steps:
    - name: Install prerequisites
      shell: bash
      run: |
        echo "::group::Install prerequisites"
        sudo snap install testflinger-cli
        sudo snap install jq
        echo "::endgroup::"

    - name: Retrieve multi-device job data
      id: data
      shell: bash
      env:
        JOB_ID: ${{ inputs.job-id }}
      run: |
        echo "::group::Wait for parent job $JOB_ID to complete"
        while true; do
          STATUS=$(testflinger status $JOB_ID)
          echo "Multi-device job status: $STATUS"
          [ "$STATUS" == "complete" ] && echo "Parent job complete -> allocation complete" && break
          sleep 10
        done
        echo "::endgroup::"
        echo "::group::Retrieve IDs of children jobs"
        JOB_IDS=$(testflinger results 761e46e8-7c33-483c-abc4-e96aaa4b7543 | jq -r '.provision_output' | sed -n 's/^.*Created job \(.*\)$/\1/p')
        echo "::notice::$JOB_IDS"
        echo "::endgroup::"
        echo "::group::Retrieve IPs of reserved devices"
        IPS=$(for JOB_ID in $JOB_IDS; do testflinger results $JOB_ID | jq -r '.device_info.device_ip'; done)
        echo "::notice::$IPS"
        echo "::endgroup::"
        echo "::group::Track the status of a multi-device reservation job ${{ env.JOB_ID }}"
        # save JSON string to output
        JSON=$(paste -d ' ' <(echo "$JOB_IDS") <(echo "$IPS") | jq -R 'split(" ") | {(.[0]): .[1]}' | jq -s 'add')
        echo "jobs=$JSON" >> $GITHUB_OUTPUT
        echo "::endgroup::"
