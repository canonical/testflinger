#!/bin/bash

AGENT=$(echo $agent_id | sed 's/-\([0-9]*\)$/\1/g')
PROVISION_TYPE="$provision_type"

# Variables for docker image
REGISTRY=ghcr.io
NAMESPACE=canonical
IMAGE_TAG=focal
IMAGE=testflinger/testflinger-testenv

# The following variables are set by the agent charm
AGENT_CONFIGS_PATH={{ agent_configs_path }}
CONFIG_DIR="{{ config_dir }}"
VIRTUAL_ENV_PATH="{{ virtual_env_path }}"

if [ -d "$VIRTUAL_ENV_PATH" ]; then
    docker run -t --name $agent_id \
        -v $PWD:/home/ubuntu \
        -v ~/.ssh:/home/ubuntu/.ssh:ro \
        -v /srv/testflinger:/srv/testflinger \
        -v $AGENT_CONFIGS_PATH/$CONFIG_DIR/$agent_id:$AGENT_CONFIGS_PATH/$CONFIG_DIR/$agent_id \
        $REGISTRY/$NAMESPACE/$IMAGE:$IMAGE_TAG \
        bash -c "(cd /srv/testflinger/device-connectors && sudo pip install . &> /dev/null) && PYTHONUNBUFFERED=1 testflinger-device-connector $PROVISION_TYPE runtest -c /$AGENT_CONFIGS_PATH/$CONFIG_DIR/$agent_id/default.yaml testflinger.json"
else
    docker run -t --name $AGENT \
        -v $PWD:/home/ubuntu \
        -v ~/.ssh:/home/ubuntu/.ssh:ro \
        -v /srv/testflinger-agent/$AGENT:/srv/testflinger-agent/$AGENT \
        $REGISTRY/$NAMESPACE/$IMAGE:$IMAGE_TAG \
        bash -c "(cd /srv/testflinger-agent/$AGENT/testflinger/device-connectors && sudo pip install . &> /dev/null) && PYTHONUNBUFFERED=1 testflinger-device-connector $PROVISION_TYPE runtest -c /srv/testflinger-agent/$AGENT/default.yaml testflinger.json"
fi
