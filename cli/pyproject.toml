[build-system]
requires = ["setuptools>=78.1.0", "setuptools-scm>=8.2.0"]
build-backend = "setuptools.build_meta"

[project]
name = "testflinger-cli"
description = "Testflinger CLI"
readme = "README.md"
license-files = ["COPYING"]
dependencies = [
  "argcomplete>=3.6.1",
  "pyyaml>=6.0.2",
  "requests>=2.32.3",
  "xdg-base-dirs>=6.0.2",
]
dynamic = ["version"]
requires-python = ">= 3.10"

[project.scripts]
testflinger-cli = "testflinger_cli:cli"
testflinger = "testflinger_cli:cli"

[dependency-groups]
dev = [
  "pytest>=8.3.5",
  "pytest-cov>=6.0.0",
  "pytest-mock>=3.14.0",
  "requests-mock>=1.12.1",
  "ruff>=0.11.6",
]

[tool.ruff]
line-length = 79

[tool.ruff.lint]
select = [
  "A",   # flake8-builtins
  "B",   # flake8-bugbear
  "C4",  # comprenhension
  "D",   # docstrings
  "DTZ", # flake8-datetimez 
  "E",   # pycodestyle errors
  "F",   # pyflakes
  "G",   # flake8-logging-format TODO
  "I",   # isort
  "LOG", # flake8-logging
  "N",   # naming
  "PLE", # pylint errors
  "PLW", # pyling warnings
  "S",   # flake8-bandit 
  "W",   # pycodestyle warnings
]
ignore = [
  "D104", # docstring: Missing docstring in public package
  "D107", # docstring: Missing docstring in __init__
  "D205", # docstring: 1 black line required between summary line and description

]

[tool.ruff.lint.per-file-ignores]
"testflinger_cli/tests/*" = [
  "S101", # use of assert
  "S105", # use of harcoded passwords for mock
  "S108", # use of temporary file or directory
]

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.uv]
cache-keys = [{ file = "pyproject.toml" }, { git = { commit = true } }]
