#cloud-config
autoinstall:
  version: 1
  # https://canonical-subiquity.readthedocs-hosted.com/en/latest/reference/autoinstall-reference.html

  identity:
    hostname: stock-desktop
    username: ubuntu
    password: $6$rounds=4096$XhTD78VC52s0Aev8$EGh9Mp2UtGnwMXbffUXLG1nzpiA9i1AasFDo1VXlQ5QrpJBrofW77P1Twr4iuqqTPdZ3EGH.UsTT19DWkWcNC0
  user-data:
    users:
      - name: ubuntu
        sudo: ALL=(ALL) NOPASSWD:ALL
        groups: sudo, adm
    write_files:
      - content: |
          [org.gnome.settings-daemon.plugins.power]
          sleep-inactive-ac-timeout=0
          sleep-inactive-battery-timeout=0
          sleep-inactive-battery-type='nothing'
          sleep-inactive-ac-type='nothing'
          idle-dim=false
          [org.gnome.desktop.session]
          idle-delay=0
          [org.gnome.desktop.screensaver]
          ubuntu-lock-on-suspend=false
          lock-enabled=false
          idle-activation-enabled=false
          [org.gnome.desktop.remote-desktop.rdp]
          enable=true
          view-only=false
        path: /usr/share/glib-2.0/schemas/certification.gschema.override
      - content: |
          #!/bin/bash
          set_usb_boot_first() {
              local bootnum current_order new_order
              
              # Get USB boot number and avoid usb-ethernet dongles
              bootnum=$(sudo efibootmgr -v | awk 'BEGIN {IGNORECASE=1} /Boot[0-9A-F]+\**[[:space:]]+.*USB/ && !/IP/ && !/MAC/ {print $1}' | head -n1 | cut -c5- | tr -d '*')
              
              if [[ -z "$bootnum" ]]; then
                  echo "No USB boot entry found" >&2
                  return 1
              fi
              
              echo "USB boot entry found: $bootnum"
              
              # Get current boot order and remove USB bootnum from it
              current_order=$(sudo efibootmgr | grep BootOrder | cut -d: -f2 | tr -d '[:space:]')
              current_order=${current_order//${bootnum},/}  # Remove if at beginning
              current_order=${current_order//,${bootnum}/}  # Remove if in middle
              current_order=${current_order//${bootnum}/}   # Remove if alone
              
              # Build new order with USB first
              new_order="$bootnum"
              if [[ -n "$current_order" ]]; then
                  new_order+=",$current_order"
              fi
              
              echo "Setting new boot order: $new_order"
              sudo efibootmgr -o "$new_order"
          }
          
          set_usb_boot_first
        path: /tmp/set_usb_boot.sh
        permissions: '0755'
    runcmd:
      # disable power save
      - ["glib-compile-schemas", "/usr/share/glib-2.0/schemas"]
      - ["sudo", "-u", "ubuntu", "-H", "gsettings", "reset-recursively", "org.gnome.settings-daemon.plugins.power"]
      - ["sudo", "-u", "ubuntu", "-H", "gsettings", "reset-recursively", "org.gnome.desktop.session"]
      - ["sudo", "-u", "ubuntu", "-H", "gsettings", "reset-recursively", "org.gnome.desktop.screensaver"]
      - ["/tmp/set_usb_boot.sh"]  # set USB boot first (after system has booted successfully)
      - ["sudo", "apt-get", "update"]
      - ["sudo", "apt-get", "install", "-y", "openssh-server"]
  ssh:
    allow-pw: true
    authorized-keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCYYa9VOGB5NBJzRQ7OnxG4Z6ynBs+B2+A49RVcNWhzWtwPkEEefsHDIz0VLbVSfGJGQMF2Dsw8PVJWBRTBvc1bkHt3sUCZklAmGVbOhXEaXS/GzCjMEb0Kg8jvEzH3WxLm0X4fIQeIDAE6Za/t5ix3uNwYgzZiGT7isx7aDQtpOrZD+y2n3F1xvDPdySJ304hAkAvMGnkwstNXduUXrnOEoPeOrQbk+k85otyaGqL0C/U+SkeeAKnzikkmvxrZlcp2zxow8iGMTfVNY15nA9BKx4v21nnIKnhVdWZ43ltp9dQoafOXbNtYTxTnFvmaHQ1WFGJ+1/fDAY8tfbjbQaIxPvPJ ubuntu@juju-machine-8-lxc-0
  early-commands:
    - "nmcli networking off"  # to prevent online checks and speed up intallation
  late-commands:
    # enable auto login
    - echo "[daemon]" > /target/etc/gdm3/custom.conf
    - echo "AutomaticLoginEnable=true" >> /target/etc/gdm3/custom.conf
    - echo "AutomaticLogin=ubuntu" >> /target/etc/gdm3/custom.conf