#cloud-config
# vim: syntax=yaml

autoinstall:
  version: 1

  storage:
    layout:
      name: direct
      match:
        install-media: true

  early-commands:
    - "nmcli networking off"

  late-commands:
    - "bash /cdrom/sideloads/hook.sh late-commands"
    - "mount -o rw,remount /cdrom"

    # Rename factory reset EFI directory so firmware won't show it. Ignore
    # errors on the way.
    - "mv /cdrom/EFI /cdrom/efi.factory || true"
    - "sed -i 's#/EFI/boot/bootx64.efi#/efi.factory/boot/bootx64.efi#g' /target/etc/grub.d/99_reset || true"
    - "echo 'GRUB_CMDLINE_LINUX_DEFAULT=\"quiet splash nomodeset modprobe.blacklist=nouveau nouveau.modeset=0\" # remove-before-flight' >> /target/etc/default/grub"
    - "curtin in-target --target=/target -- update-grub"

  shutdown: reboot

  user-data:
    bootcmd:
      - "bash /sp-bootstrap/hook.sh early-welcome"

    write_files:
      - content: |
          [org.gnome.settings-daemon.plugins.power]
          sleep-inactive-ac-timeout=0
          sleep-inactive-battery-timeout=0
          sleep-inactive-battery-type='nothing'
          sleep-inactive-ac-type='nothing'
          idle-dim=false
          [org.gnome.desktop.session]
          idle-delay=0
          [org.gnome.desktop.screensaver]
          ubuntu-lock-on-suspend=false
          lock-enabled=false
          idle-activation-enabled=false
        path: /usr/share/glib-2.0/schemas/certification.gschema.override
      - content: |
          #!/bin/bash
          set_usb_boot_first() {
              local bootnum current_order new_order

              # Get USB boot number and avoid usb-ethernet dongles
              bootnum=$(sudo efibootmgr -v | awk 'BEGIN {IGNORECASE=1} /Boot[0-9A-F]+\**[[:space:]]+.*USB/ && !/IP/ && !/MAC/ {print $1}' | head -n1 | cut -c5- | tr -d '*')

              if [[ -z "$bootnum" ]]; then
                  echo "No USB boot entry found" >&2
                  return 1
              fi

              echo "USB boot entry found: $bootnum"

              # Get current boot order and remove USB bootnum from it
              current_order=$(sudo efibootmgr | grep BootOrder | cut -d: -f2 | tr -d '[:space:]')
              current_order=${current_order//${bootnum},/}  # Remove if at beginning
              current_order=${current_order//,${bootnum}/}  # Remove if in middle
              current_order=${current_order//${bootnum}/}   # Remove if alone

              # Build new order with USB first
              new_order="$bootnum"
              if [[ -n "$current_order" ]]; then
                  new_order+=",$current_order"
              fi

              echo "Setting new boot order: $new_order"
              sudo efibootmgr -o "$new_order"
          }

          set_usb_boot_first
        path: /tmp/set_usb_boot.sh
        permissions: '0755'

    users:
      - name: ubuntu
        groups: [adm, sudo]
        sudo: "ALL=(ALL) NOPASSWD:ALL"
        lock_passwd: false
        shell: /bin/bash
        passwd: "$6$rounds=4096$PCrfo.ggdf4ubP$jpQFjLelT0wZqlsuSgQ4cINcuswPMgKMVaBm198oG9mphcCvqQJ9n0klROSuAgYUn4tbn1ds5K1ba2gTweHwI/"

    locale: en_US.UTF-8

    packages:
      - openssh-server

    package_upgrade: false

    runcmd:
      # enable autologin
      - ["sudo", "sed", "-i", "s|#  AutomaticLoginEnable = true|AutomaticLoginEnable = true|g", "/etc/gdm3/custom.conf"]
      - ["sudo", "sed", "-i", "s|#  AutomaticLogin = user1|AutomaticLogin = ubuntu|g", "/etc/gdm3/custom.conf"]
      # disable power save
      - ["glib-compile-schemas", "/usr/share/glib-2.0/schemas"]
      - ["sudo", "-u", "ubuntu", "-H", "gsettings", "reset-recursively", "org.gnome.settings-daemon.plugins.power"]
      - ["sudo", "-u", "ubuntu", "-H", "gsettings", "reset-recursively", "org.gnome.desktop.session"]
      - ["sudo", "-u", "ubuntu", "-H", "gsettings", "reset-recursively", "org.gnome.desktop.screensaver"]
      - ["/tmp/set_usb_boot.sh"]
    # Reboot after early-welcome is done
    power_state:
      mode: "reboot"
      message: "early-welcome setup complete, rebooting..."
      timeout: 30

bootcmd:
  - ['plymouth', 'display-message', '--text', 'Starting automated testing installer...']
